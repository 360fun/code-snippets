
# Declare project language.
# @link http://about.travis-ci.org/docs/user/languages/php/
language: php

# Declare versions of PHP to use. Use one decimal max.
php:
  - "5.5"
  - "5.4"
  - "5.3"
  - "5.2"

env:
  # Trunk
  # @link https://github.com/WordPress/WordPress
  - WP_VERSION=master WP_MULTISITE=0
  - WP_VERSION=master WP_MULTISITE=1

  # WordPress 4.2 (latest stable version)
  # @link https://github.com/WordPress/WordPress/tree/4.2-branch
  - WP_VERSION=4.2 WP_MULTISITE=0
  - WP_VERSION=4.2 WP_MULTISITE=1

  # WordPress 3.3 (minimum stable version)
  # @link https://github.com/WordPress/WordPress/tree/3.3-branch
  - WP_VERSION=3.3 WP_MULTISITE=0
  - WP_VERSION=3.3 WP_MULTISITE=1

# Declare 5.6 beta in test matrix.
# @link http://docs.travis-ci.com/user/build-configuration/
matrix:
  include:
    - php: 5.6
      env: WP_VERSION=master
  allow_failures:
    - php: 5.6
    - php: 5.2
  fast_finish: true

# Prepare the system by installing prerequisites and dependencies.
# Failures in this section will result in build status 'errored'.
before_install:
  - composer self-update
  - npm install -g grunt-cli

# Prepare your build for testing.
# Failures in this section will result in build status 'errored'.
before_script:

  # Run Grunt and Composer
  - composer self-update
  - composer install
  - npm install

  # set up WP install
  - export WP_DEVELOP_DIR=/tmp/wordpress
  - mkdir -p $WP_DEVELOP_DIR
  - git clone --depth=1 --branch="$WP_VERSION" git://develop.git.wordpress.org $WP_DEVELOP_DIR
  # Set up plugin information.
  - plugin_slug=$(basename $(pwd))
  - plugin_dir=$WP_DEVELOP_DIR/src/wp-content/plugins/$plugin_slug
  - cd ..
  - ls -l
  - mv $plugin_slug $WP_DEVELOP_DIR/src/wp-content/plugins
  # Set up WordPress configuration.
  - cd $WP_DEVELOP_DIR
  - echo $WP_DEVELOP_DIR
  - cp wp-tests-config-sample.php wp-tests-config.php
  - sed -i "s/youremptytestdbnamehere/wordpress_test/" wp-tests-config.php
  - sed -i "s/yourusernamehere/root/" wp-tests-config.php
  - sed -i "s/yourpasswordhere//" wp-tests-config.php
  # Create WordPress database.
  - mysql -e 'CREATE DATABASE wordpress_test;' -uroot
  # Change into plugin directory.
  - cd $plugin_dir

# Run test script commands
# Default is specific to project language.
# All commands must exit with code 0 on success. Anything else is considered failure.
script:

  # Run Grunt tests
  - grunt test
